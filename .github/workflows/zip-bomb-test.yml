name: Zip Bomb Upload Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unzip-and-upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install unzip utility
      - name: Install unzip
        run: sudo apt-get install -y unzip

      # Step 3: Create assets directory
      - name: Create assets directory
        run: mkdir -p assets

      # Step 4: List files in the ZIP
      - name: List files in ZIP
        id: list_files
        run: |
          if unzip -l zbbig2.zip > file_list.txt; then
            echo "Files listed successfully."
            cat file_list.txt
          else
            echo "Failed to list files in zip."
            exit 1
          fi

      # Step 5: Function to process Git operations
      - name: Start Git commit and push process
        id: git_process
        run: |
          # Function to commit and push files
          git_commit_and_push() {
            while true; do
              # Check for any files in the assets directory
              for file in assets/*; do
                if [[ -e "$file" ]]; then
                  echo "Committing and pushing $file..."
                  
                  # Set up Git user for committing
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'

                  # Commit the file
                  git add "$file"
                  if git commit -m "Add extracted file: $(basename "$file")"; then
                    git push || echo "Push failed"
                    # Delete the file after pushing
                    rm "$file" || echo "Failed to delete $file"
                  else
                    echo "No changes to commit."
                  fi

                  # Sleep for 1 second
                  sleep 1
                fi
              done
              sleep 2  # Wait before checking again
            done
          }

          git_commit_and_push &  # Start the Git process in the background

      # Step 6: Unzip files in parallel
      - name: Unzip files in parallel
        run: |
          while IFS= read -r line; do
            file=$(echo "$line" | awk '{print $NF}')
            # Only process files that start with 'assets/'
            if [[ $file == assets/* ]]; then
              echo "Processing $file..."
              # Extract the file in the background
              unzip -o zbbig2.zip "$file" -d assets &

              # Limit the number of concurrent unzip processes to 10
              while [ "$(jobs | wc -l)" -ge 10 ]; do
                sleep 1  # Wait for a process to finish
              done
            fi
          done < file_list.txt

          # Wait for all unzip processes to finish
          wait

      # Step 7: Clean up
      - name: Clean up
        run: rm file_list.txt
