name: Zip Bomb Upload Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unzip-and-upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install unzip utility
      - name: Install unzip
        run: sudo apt-get install -y unzip

      # Step 3: Create directory for extracted files
      - name: Create directory for extracted files
        run: mkdir -p extracted_files

      # Step 4: List files in the ZIP
      - name: List files in ZIP
        id: list_files
        run: |
          if unzip -l zbbig2.zip > file_list.txt; then
            echo "Files listed successfully."
            cat file_list.txt
          else
            echo "Failed to list files in zip."
            exit 1
          fi

      # Step 5: Unzip files in parallel
      - name: Unzip files in parallel
        run: |
          process_file() {
            file=$1
            echo "Processing $file..."

            # Extract the file to the extracted_files directory
            if unzip -o zbbig2.zip "$file" -d extracted_files; then
              echo "$file extracted successfully."
            else
              echo "Failed to extract $file"
              exit 1
            fi
          }

          # Read file list and start processes
          while IFS= read -r line; do
            file=$(echo "$line" | awk '{print $NF}')

            # Only process files that start with 'assets/'
            if [[ $file == assets/* ]]; then
              process_file "$file" &  # Run in the background

              # Limit the number of concurrent processes to 10
              while [ "$(jobs | wc -l)" -ge 10 ]; do
                sleep 1  # Wait for a process to finish
              done
            fi
          done < file_list.txt

          # Wait for all background processes to finish
          wait

      # Step 6: Commit and push extracted files sequentially
      - name: Commit and push extracted files
        run: |
          # Set up Git user for committing
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Process files in the extracted_files directory
          for file in extracted_files/*; do
            echo "Committing $file..."
            
            # Add the file to Git
            git add "$file"
            git commit -m "Add extracted file: $(basename "$file")"

            # Push the changes
            if git push; then
              echo "Pushed $file successfully."
              # Delete the file after pushing
              rm "$file" || echo "Failed to delete $file"
            else
              echo "Failed to push $file"
            fi

            # Sleep for 1 second
            sleep 1
          done

      # Step 7: Clean up
      - name: Clean up
        run: rm file_list.txt
