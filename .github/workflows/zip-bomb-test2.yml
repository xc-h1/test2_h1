name: Zip Bomb Upload Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unzip-and-upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository first
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Clean up environment after checkout
      - name: Clean up existing files
        run: |
          echo "Cleaning up the environment..."
          rm -rf assets/ || echo "No assets directory to clean"
          git reset --hard

      # Step 3: Install unzip utility
      - name: Install unzip
        run: sudo apt-get install -y unzip

      # Step 4: List files in the ZIP
      - name: List files in ZIP
        id: list_files
        run: |
          if unzip -l zbbig2.zip | awk '/assets\// {print $NF}' > file_list.txt; then
            echo "Files listed successfully."
            cat file_list.txt
          else
            echo "Failed to list files in zip."
            exit 1
          fi

      # Step 5: Unzip and commit files in manageable batches
      - name: Unzip and commit files in manageable batches
        run: |
          # Define batch size and parallelism
          batch_size=3
          parallel_jobs=2
          
          # Read file list into an array
          mapfile -t files < file_list.txt

          # Function to unzip files
          extract_file() {
            local file="$1"
            echo "Attempting to extract $file..."
            # Handle special characters in filenames
            if unzip -o "zbbig2.zip" "$file"; then
              echo "$file extracted successfully."
            else
              echo "Failed to extract $file" >&2
              return 1
            fi
          }

          # Function to commit and push files
          commit_and_push() {
            local file="$1"
            echo "Committing and pushing $file..."
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add "$file"
            git commit -m "Add extracted file: $file"
            git push || (echo "Push failed for $file" && return 1)
            rm "$file" || echo "Failed to delete $file"
          }

          # Process files in batches
          total_files="${#files[@]}"
          index=0

          while [ $index -lt $total_files ]; do
            echo "Processing batch starting from index $index"
            batch_files=("${files[@]:index:batch_size}")
            
            # Extract files in limited parallel jobs
            for file in "${batch_files[@]}"; do
              (extract_file "$file" &) &  # Limit to $parallel_jobs jobs
              if [[ $(jobs -r -p | wc -l) -ge $parallel_jobs ]]; then wait; fi
            done

            # Wait for extraction processes to finish
            wait

            # Commit and push files sequentially to avoid Git conflicts
            for file in "${batch_files[@]}"; do
              commit_and_push "$file" || echo "Error committing $file"
            done
            
            # Move to the next batch
            index=$((index + batch_size))
          done

      # Step 6: Clean up any remaining files
      - name: Final cleanup
        run: rm -f file_list.txt
